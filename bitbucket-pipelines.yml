# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: node:12

pipelines:
  branches:
    development-pipeline:
      - step:
          name: "Lint, Test and Test Build"
          script:
#            - yarn
#            - yarn build
#            - yarn eslint-check && yarn prettier-check
#            - yarn test
      - step:
          name: 'Deployment to Staging'
          deployment: staging
          script:
            - echo "Your deployment to staging script goes here..."
      - step:
          name: 'Deployment to Production'
          deployment: production
          trigger: 'manual'
          script:
            - SSH_PATH="$HOME/.ssh" && mkdir -p "$SSH_PATH" && touch "$SSH_PATH/known_hosts"
            - echo "$PRIVATE_KEY_B64" | base64 --decode > "$SSH_PATH/deploy_key"
#            - echo $PRIVATE_KEY
            - chmod 700 "$SSH_PATH" && chmod 600 "$SSH_PATH/known_hosts" "$SSH_PATH/deploy_key"
            - eval $(ssh-agent)
            - printf '%s\n' 'Host *.eait.uq.edu.au' '  StrictHostKeyChecking no' 'Host *.zones.eait.uq.edu.au' "  ProxyJump $USER@moss.labs.eait.uq.edu.au" > "$SSH_PATH/config"
            - cat "$SSH_PATH/config"
            - ssh-add "$SSH_PATH/deploy_key"
            - >-
              ssh -i "$SSH_PATH/deploy_key" "$USER@$HOST"
              "cd /var/www/nodejs/queue &&
              git reset HEAD --hard &&
              git checkout main &&
              git pull && yarn &&
              rm -rf build &&
              yarn build &&
              yarn migration-run &&
              echo "$PW" | sudo -S systemctl restart nodejs &&
              history -c"